% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaedb_connect.R
\name{aaedb_connect}
\alias{aaedb_connect}
\alias{aaedb_key_set}
\alias{aaedb_key_delete}
\alias{aaedb_disconnect}
\alias{check_aaedb_connection}
\title{Open a connection to the AAEDB}
\usage{
aaedb_connect(...)

aaedb_key_set(...)

aaedb_key_delete(...)

aaedb_disconnect(...)

check_aaedb_connection(...)
}
\arguments{
\item{\dots}{ignored}
}
\description{
\code{aaedb_connect} opens a connection to the AAEDB,
  which can be useful when making repeated queries to the AAEDB as
  it avoids repeatedly entering user credentials. Connections to the
  AAEDB require an appropriate VPN connection.

  \code{aaedb_connect} will ask for a username and password each time
  it is called. To save this information locally, the
  \code{aaedb_key_set} function allows a user to store their details
  in the system credential store (e.g. keychain). On first call,
  \code{aaedb_key_set} will ask for a username and password, after
  which this information will be stored and will persist once the
  R session is closed. The \code{aaedb_key_delete} function can be used
  to remove this saved key.

  An open connection will automatically be detected by the
  \code{fetch_table}, \code{fetch_query}, and \code{fetch_project}
  functions.

  It is good practice to close the database connection when all queries
  are completed. This will happen automatically when the current
  R session ends. If the connection needs to be closed prior to this,
  it can be manually closed by calling \code{aaedb_disconnect()}.
}
\examples{
# optional: store credentials to avoid re-entering every time
aaedb_key_set()

# connect to the AAEDB
aaedb_connect()

# process a basic query on the database (list all site information
#   for the Ovens River)
site_table <- fetch_table("site", collect = FALSE)
ovens_sites <- site_table \%>\%
  filter(grepl("ovens", waterbody, ignore.case = TRUE)) \%>\%
  collect()

# manually disconnect from the AAEDB (not usually required)
aaedb_disconnect()
}
